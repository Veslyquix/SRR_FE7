#ifndef IMPROVED_SOUND_MIXER

#ifndef callHackNew 
	#define callHackNew(offset) 		"BYTE $01 $4B $9E $46 $00 $F8 $01 $E0; POIN (offset|0x1)"
#endif 

#include "Extensions/Hack Installation.txt" 
#ifndef PROC_CALL_ROUTINE_2
#define PROC_CALL_ROUTINE_2(aprRoutine)              "SHORT 0x16 0; POIN aprRoutine"
#endif 

#include "Patches/FE8.lyn.event" 
#include "Patches/FE8_AsmHooks.lyn.event" 

#ifdef SKILLSYS_INSTALLED
#ifndef VeslyBuildfile
MESSAGE Open FE8_Installer and read / config things please 
//asdf // add two slashes to comment out this line 
#endif 
#endif 

ALIGN 4 
DisplayTimedHitsOption:
#ifdef VeslyBuildfile 
WORD 1 
#else 
WORD 0 
#endif 
//#define JankyPalettes // Uncomment if you want to always use char palettes, even with classes randomized 
#ifndef VeslyBuildfile
	#define NeverRandomizeMusic // comment this out if you want music randomized 
	// it only knows of vanilla song IDs though 
#endif 

#ifndef RandomizerRam 
#define RandomizerRam 0x203EA34 // 12 bytes of unit id 0x1B (Enemy) BWL data //0x203EC24 // 8 bytes of 0x3A unit BWL data 
//#define RandomizerRam 0x30017AC // alternative: 8 bytes of Valni records 
#endif 
ALIGN 4
BonusItemChance: 
WORD 10
CasualModeFlag:
WORD 0xB0 
RandomizePrepShop:
WORD 0 // If true, randomize prep shop if player randomizes found items 
MinClassBase:
WORD 0 // If true, stats won't go lower than class bases 
RandomizeMovConBonus:
WORD 1 
OnlyThievesCanUseLockpicks: // only applies to players. Enemies/NPCs can always use lockpicks 
WORD 1 
ClassBasedGrowths: // if true, only use class growths 
WORD 0
CombinedGrowths: // if true, use char+class growths 
WORD 0
WepLockExInstalled:
WORD 1 // Make this true if you use a Weapon Lock Expansion hack 
AlwaysRemoveGlowy: // stat screen 
WORD 0 
DefaultConfigToVanilla:
WORD 0
MaxWeaponHitrate:
WORD 250 // make this 125 if you like 
IncludeMonstersWithoutWEXP:
WORD 0
#define statCap 60 
maxStat:
WORD statCap 

ALIGN 4 
MaxItems_Link:
#ifdef VeslyBuildfile 
WORD 0xBC 
#endif 
WORD 0 // If 0, it'll read through your item editor and count 
// until it finds an item with an ID that does not match (eg. says 0) 
MaxClasses_Link:
WORD 0 // If 0, it'll read through your class editor and count
// until it finds a class with an ID that does not match (eg. says 0) 

// Each shop will have one of these items at random
RareItemTableSize:
WORD 18 // make this 0 if you don't want every shop to have one of these items 
RareItemTable: // stat boosters / promo items 
BYTE 0x5b 0x5c 0x5d 0x5e 0x5f 0x60 0x61 0x62 0x63 0x64 0x65 0x66 0x67 0x68 0x88 0x97 0x98 0x99 

#define NeverChangeFromItem(id) "PUSH; ORG ItemExceptions + (id * 2); BYTE 1; POP" 
#define NeverChangeIntoItem(id) "PUSH; ORG ItemExceptions + (id * 2) + 1; BYTE 1; POP" 
#define NeverChangeItem(id) "PUSH; ORG ItemExceptions + (id * 2); BYTE 1 1; POP" // does both of the above 

#define NeverChangeFromClass(id) "PUSH; ORG ClassExceptions + (id * 2); BYTE 1; POP" 
#define NeverChangeIntoClass(id) "PUSH; ORG ClassExceptions + (id * 2) + 1; BYTE 1; POP" 
#define NeverChangeClass(id) "PUSH; ORG ClassExceptions + (id * 2); BYTE 1 1; POP" // does both of the above 

#define NeverChangeChar(id) "PUSH; ORG CharExceptions + (id * 2); BYTE 1 1; POP" 

ALIGN 4 
ItemExceptions:
FILL(256*2)
ALIGN 4 
ClassExceptions:
FILL(256*2)
ALIGN 4 
CharExceptions: // 
FILL(256*2) 


NeverChangeItem(0xA6) // Nightmare 
NeverChangeItem(0xA5) // Dance  
NeverChangeItem(0xB6) // Alacalibur has no sfx 
 
NeverChangeFromItem(0x6C) // Vulnerary 
NeverChangeIntoItem(0xB5) // Stone 
NeverChangeClass(0x66) // Demon King 

NeverChangeIntoClass(0xE) // Some manakete
NeverChangeIntoClass(0x10) // Some mercenary thing 
NeverChangeIntoClass(0x51) // Phantom

NeverChangeChar(0xFD) // arena enemy randomized breaks things 
NeverChangeChar(0xBE) // Demon king 
//NeverChangeChar(1)
//NeverChangeChar(0x68)

#ifdef SKILLSYS_INSTALLED
#ifndef VeslyBuildfile
MESSAGE Read/edit until this line unless you want to change your stat screen first page layout below 
//qwer // add two slashes to comment out this line 
#endif 
#endif 


//#define GetUnitMaxHp 0x08019191
#define GetUnitPower 0x080191B1
#define GetUnitSkill 0x080191D1
#define GetUnitSpeed 0x08019211
#define GetUnitDefense 0x08019251
#define GetUnitResistance 0x08019271
#define GetUnitLuck 0x08019299

#define SS_STR "WORD 11; POIN GetUnitUnadjustedPow GetUnitPower GetUnitMaxPow GetUnitPowGrowth" 
#define SS_SKL "WORD 12; POIN GetUnitUnadjustedSkl GetUnitSkill GetUnitMaxSkl GetUnitSklGrowth" 
#define SS_SPD "WORD 13; POIN GetUnitUnadjustedSpd GetUnitSpeed GetUnitMaxSpd GetUnitSpdGrowth" 
#define SS_LCK "WORD 14; POIN GetUnitUnadjustedLck GetUnitLuck GetUnitMaxLck GetUnitLckGrowth" 
#define SS_DEF "WORD 15; POIN GetUnitUnadjustedDef GetUnitDefense GetUnitMaxDef GetUnitDefGrowth" 
#define SS_RES "WORD 16; POIN GetUnitUnadjustedRes GetUnitResistance GetUnitMaxRes GetUnitResGrowth" 
#define SS_MAG "WORD 17; POIN GetUnitUnadjustedMag CallprMagGetter GetUnitMaxMag GetUnitMagGrowth" 
#define SS_BLANK "WORD 0 0 0 0 0" 
#define SS_MOV "WORD 1; POIN GetUnitUnadjustedMov CallprMovGetter GetUnitMaxMov GetUnitHPGrowth" // yes, hp 
#define SS_CON "WORD 2; POIN GetUnitUnadjustedCon CallprConGetter GetUnitMaxCon 0" 
#define SS_AID  "WORD 3; POIN 0 0 0 0" 
#define SS_TRV  "WORD 4; POIN  0 0 0 0" 
#define SS_AFN  "WORD 5; POIN 0 0 0 0" 
#define SS_COND "WORD 6; POIN  0 0 0 0" 

#define SS_TALK "WORD 7; POIN  0 0 0 0" 
#define SS_SKILLS "WORD 8; POIN  0 0 0 0" 
#define SS_SKILLICONS1 "WORD 9; POIN  0 0 0 0" 
#define SS_SKILLICONS2 "WORD 10; POIN  0 0 0 0" 


ALIGN 4 
gStatScreenFunction: 
SS_Page0_Layout: 

#ifndef SKILLSYS_INSTALLED 
// Left side 
SS_STR
SS_SKL
SS_SPD
SS_LCK
SS_DEF
SS_RES
SS_BLANK
SS_BLANK 
// Right side below  
SS_MOV
SS_CON
SS_AID
SS_TRV
SS_AFN
SS_COND
SS_BLANK 
SS_BLANK // must have 16 entries 
#endif 

#ifndef STRMAG_INSTALLED 
ALIGN 4 
SS_Page0_Layout_Skills: 
// Left side 
SS_STR
SS_SKL
SS_SPD
SS_LCK
SS_DEF
SS_RES
SS_MOV
SS_CON
// Right side
SS_AID
SS_TRV
SS_AFN
SS_COND
SS_TALK
SS_SKILLS
SS_SKILLICONS1
SS_SKILLICONS2
#endif

#ifdef STRMAG_INSTALLED
ALIGN 4 
SS_Page0_Layout_Skills: 
SS_STR
SS_MAG
SS_SKL
SS_SPD
SS_LCK
SS_DEF
SS_RES
SS_MOV
// Right side 
SS_CON
SS_AID
SS_COND // SS_TRV alternates with? 
SS_AFN
SS_TALK
SS_SKILLS
SS_SKILLICONS1
SS_SKILLICONS2
#endif 

ALIGN 4 
SS_EnableBWL:
#ifdef SKILLSYS_INSTALLED
WORD 0
#endif 
WORD 1 

VramDest_DebugFont: 
WORD 0x4800 // in glowy 

PUSH 

ORG $10b80
jumpToHack(FE8_ForcedPromotionHook) 

ORG $5E520 
BYTE 0xA // Fimbulvetr fix 

#ifdef VeslyBuildfile
// default summoner from list 
ORG $7ad4c 
WORD 0 // 0 = Ewan, 1 = Knoll, 2 = Lyon 
// See these links: https://github.com/FireEmblemUniverse/fireemblem8u/blob/60f3ef67d63c8f71ec15eec9a8675814c966ddbc/src/classchg-data.c#L590
// https://github.com/FireEmblemUniverse/fireemblem8u/blob/60f3ef67d63c8f71ec15eec9a8675814c966ddbc/src/mapanim_summon.c#L32

ORG $7AF5E // don't 0 out phantom wexp 
SHORT $46C0 

ORG $c5444
jumpToHack(TitleScreen_FE8) 

ORG $a9028
jumpToHack(SaveScreen_FE8) 

// animation id for ballistas 
ORG $8AF172; BYTE 0x9F
ORG $8AF176; BYTE 0x9F
ORG $8AF17A; BYTE 0x9F
ORG $8AF18A; BYTE 0x9F
ORG $8AF18E; BYTE 0x9F
ORG $8AF192; BYTE 0x9F
ORG $8AF1A2; BYTE 0x9F
ORG $8AF1A6; BYTE 0x9F
ORG $8AF1AA; BYTE 0x9F

ORG $3cc90 // $31740 $37D84
jumpToHack(MaybeChargeAtPlayer)

//Patches Speed ​​up the gray poison mist map effect when receiving poison damage. (PatchForm) Speed ​​up the gray poison mist map effect when receiving poison damage.2024-06-08 1:38:03 PM
ORG $9A6FA0
BYTE  $03;
ORG $9A6FA4
BYTE  $03;
ORG $9A6FA8
BYTE  $03;
ORG $9A6FAC
BYTE  $03;
ORG $9A6FB0
BYTE  $03;
ORG $9A6FB4
BYTE  $03;
ORG $9A6FB8
BYTE  $03;
ORG $9A6FBC
BYTE  $03;
ORG $9A6FC0
BYTE  $02;
ORG $9A6FC4
BYTE  $02;
ORG $9A6FC8
BYTE  $02;
ORG $9A6FCC
BYTE  $02;

ORG $2523C 
callHackNew(PreventPhantomTrading)

#endif 


ORG $A20390
PROC_CALL_ROUTINE_2(FE8_StartDifficultySelection)

#ifndef NeverRandomizeMusic
ORG $726E2 
SHORT $46C0 
jumpToHack(FE8_RandBattleMusicHook)
#endif 


ORG $205B24 
POIN DisplayPage0|1

ORG $115CC 
jumpToHack(DroppableItemHook_FE8) 

ORG $205964 // don't draw stat labels 
FILL(0x10 * 10) 

ORG $2059b4 // Don't draw "mov" 
BYTE $84 $3C $00 $02 $FE $3F $00 $02 $03 $00 $00 $00 $A8 $11 $A0 $08
ORG $205a04; WORD 0 0 0 0

ORG $871Ea // in 8087184 T DisplayPage0
FILL($8731E - $871Ea) // nop out the vanilla draw bar stuff 
ORG $871F0 // our new version 
callHackNew(DrawBarsOrGrowths) 

ORG $88888 // in 808873c T StatScreen_OnIdle
FILL($888A8 - $88888)
ORG $88888
SHORT $1C28 $1C28
callHackNew(StatScreenSelectLoop)


#ifndef JankyPalettes
ORG $579C4
callHackNew(MaybeUseGenericPalette_FE8)
SHORT $46c0 $46c0 $46c0 $46c0 $46c0 
//ORG $5739E 
//SHORT $2100 // always use generic palette (by Vesly) 
#endif 

// in BuildBestMovementScript 
// Fix REDA / MOVE from crashing on impassible terrain 
ORG 0x01A77E; // fe8 version 
BYTE 0xFF 0x2D 0x29 0xDA 0x02 0x99 0x08 0x70 0x04 0x9B 0x02 0x93

ORG $409D0 // WARNING: this might cause ai to steal from you? 
SHORT $46c0 // allow use of lockpick for any ai? 

ORG $37D4
SHORT $46C0 $46C0 // don't erase bg when setting up debug font 

ORG $88588 
callHackNew(ConditionallyRemoveGlowy)

ORG 0x11CC
callHackNew(RandColoursHook)
SHORT 0x46C0

ORG $3A15C
callHackNew(MakeStolenItemDroppable_FE8)
SHORT 0x46C0

#ifdef VeslyBuildfile
ORG $7894 // in 7854 // fe7 8008E34 fe6 800a4f4
callHackNew(HookLoadFace_FE8)

ORG $B86D8 
callHackNew(HookWMStartFace_FE8) 

ORG $192BC 
jumpToHack(HookGetUnitPortraitId_FE8) 
ORG $192DE 
SHORT $1c10 // mov r0, r2 

// 80192F4	GetUnitChibiId // fe7 8018BF4 fe6 8018500
ORG $19308 
jumpToHack(HookGetUnitMiniPortraitId_FE8)
ORG $1932A
SHORT $46c0 

ORG $CD6C8 
jumpToHack(GetTraineePromoPortraitId_FE8)

ORG $73DBC
jumpToHack(GetBattleLevelUpPortraitId_FE8)

ORG $7F25C 
callHackNew(GetMapLevelUpPortraitId_FE8)

#endif 

POP 


ALIGN 4 
ReplacePortraitTable:
FILL(256) 

#define ReplacePortraitEntry(id, newID) "PUSH; ORG ReplacePortraitTable + id; BYTE newID; POP" 

#ifdef VeslyBuildfile
ReplacePortraitEntry(3, 2) // Replace Eirika closed eyes   
ReplacePortraitEntry(0xB, 0xA)  
ReplacePortraitEntry(0xD, 0xC)  
ReplacePortraitEntry(0x12, 0x11)  
ReplacePortraitEntry(0x15, 0x14)  
ReplacePortraitEntry(0x17, 0x16)  
ReplacePortraitEntry(0x1d, 0x1c)  
ReplacePortraitEntry(0x1f, 0x1e)  
ReplacePortraitEntry(0x27, 0x26)  
ReplacePortraitEntry(0x28, 0x26)  
ReplacePortraitEntry(0x2d, 0x2)  
ReplacePortraitEntry(0x2e, 0x14)  
ReplacePortraitEntry(0x2f, 0x29)  
ReplacePortraitEntry(0x41, 0x40)  
ReplacePortraitEntry(0x47, 0x46)  
ReplacePortraitEntry(0x4A, 0x46)  
ReplacePortraitEntry(0x4e, 0x40)  
ReplacePortraitEntry(0x4f, 0x40)  
ReplacePortraitEntry(0x50, 0x46)  
ReplacePortraitEntry(0x57, 0x56)  
#endif 

ALIGN 4 
SkillExceptions:
FILL 256*2
#define NeverRandSkill(id) "PUSH; ORG SkillExceptions + (id*2); BYTE 1 1; POP" 
#ifdef SKILLSYS_INSTALLED 
NeverRandSkill(DanceID)
//NeverRandSkill(SummonID)
NeverRandSkill(CunningID)
NeverRandSkill(SlayerID)
#endif 

ALIGN 4 
VanillaSkill:
FILL 256 
#define VanillaSkill(id) "PUSH; ORG VanillaSkill + id; BYTE 1; POP" 
VanillaSkill(SupplyID)
VanillaSkill(CantoID)
VanillaSkill(GreatShieldID)
VanillaSkill(CunningID)
VanillaSkill(CritUpID)
VanillaSkill(SureShotID)
VanillaSkill(SlayerID)
VanillaSkill(SummonID)
VanillaSkill(DanceID)
VanillaSkill(StealID)
VanillaSkill(LethalityID)
VanillaSkill(LunaID)
VanillaSkill(LockTouchID)

ALIGN 4 
AlwaysSkillTable:
FILL 256 
#ifdef SKILLSYS_INSTALLED 
#define AlwaysSkill(id) "PUSH; ORG AlwaysSkillTable + id; BYTE 1; POP" 
AlwaysSkill(CantoPlusID)
AlwaysSkill(CaptureID)
AlwaysSkill(LifeAndDeathID)
AlwaysSkill(SoulSapID)
AlwaysSkill(RecklessFighterID)
AlwaysSkill(MultiscaleID)
AlwaysSkill(ShadePlusID)
AlwaysSkill(RallyChaosID)
AlwaysSkill(EternalVanityID)
AlwaysSkill(SpectrumInitID)
AlwaysSkill(AcrobatID)
AlwaysSkill(PassID)
AlwaysSkill(DespoilID)
AlwaysSkill(PickupID)
AlwaysSkill(FuryID)
AlwaysSkill(FailGaleID)
AlwaysSkill(GaleforceID)
AlwaysSkill(GrislyWoundID)
AlwaysSkill(NoGuardID)
AlwaysSkill(SteadyBrawlerID)
AlwaysSkill(DazzleID)
AlwaysSkill(PridefulWarriorID)
AlwaysSkill(WaryFighterID)
AlwaysSkill(StealPlusID)
AlwaysSkill(RightfulGodID)
AlwaysSkill(VantagePlusID)
AlwaysSkill(NiceThighsID)
AlwaysSkill(NonconformingID)
AlwaysSkill(ReciprocalAidID)
AlwaysSkill(BlackMagicID)
AlwaysSkill(BlossomID)
AlwaysSkill(DarkBargainID)
//AlwaysSkill(DevilsWhimID) // if skill defined, maybe 
#endif 

#ifndef TextTable 
	#define TextTable 0x15D48C 
#endif 
#ifndef setText 
#define setText(textID, offset) "PUSH; ORG (TextTable+(4*textID)); POIN (offset|0x80000000); POP"
#endif 
#ifdef VeslyBuildfile
	#define SetName(id) "{ addr: ; setText(id, addr) ; }"
#else 
	#define SetName(id) "ALIGN 16"
#endif 

ALIGN 16
NameStrings: 
FILL 16*256 
ORG NameStrings 
ALIGN 16 ; SetName(0x0212); String("Eirika"); 
ALIGN 16 ; SetName(0x0213); String("Seth"); 
ALIGN 16 ; SetName(0x0214); String("Gilliam"); 
ALIGN 16 ; SetName(0x0215); String("Franz"); 
ALIGN 16 ; SetName(0x0216); String("Moulder"); 
ALIGN 16 ; SetName(0x0217); String("Vanessa"); 
ALIGN 16 ; SetName(0x0218); String("Ross"); 
ALIGN 16 ; SetName(0x0219); String("Neimi"); 
ALIGN 16 ; SetName(0x021A); String("Colm"); 
ALIGN 16 ; SetName(0x021B); String("Garcia"); 
ALIGN 16 ; SetName(0x021C); String("Innes"); 
ALIGN 16 ; SetName(0x021D); String("Lute"); 
ALIGN 16 ; SetName(0x021E); String("Natasha"); 
ALIGN 16 ; SetName(0x021F); String("Cormag"); 
ALIGN 16 ; SetName(0x0220); String("Ephraim"); 
ALIGN 16 ; SetName(0x0221); String("Forde"); 
ALIGN 16 ; SetName(0x0222); String("Kyle"); 
ALIGN 16 ; SetName(0x0223); String("Amelia"); 
ALIGN 16 ; SetName(0x0224); String("Artur"); 
ALIGN 16 ; SetName(0x0225); String("Gerik"); 
ALIGN 16 ; SetName(0x0226); String("Tethys"); 
ALIGN 16 ; SetName(0x0227); String("Marisa"); 
ALIGN 16 ; SetName(0x0228); String("Saleh"); 
ALIGN 16 ; SetName(0x0229); String("Ewan"); 
ALIGN 16 ; SetName(0x022A); String("L'Arachel"); 
ALIGN 16 ; SetName(0x022B); String("Dozla"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x022D); String("Rennac"); 
ALIGN 16 ; SetName(0x022E); String("Duessel"); 
ALIGN 16 ; SetName(0x022F); String("Myrrh"); 
ALIGN 16 ; SetName(0x0230); String("Knoll"); 
ALIGN 16 ; SetName(0x0231); String("Joshua"); 
ALIGN 16 ; SetName(0x0232); String("Syrene"); 
ALIGN 16 ; SetName(0x0233); String("Tana"); 
ALIGN 16 ; SetName(0x0234); String("Lyon"); 
ALIGN 16 ; SetName(0x0236); String("Orson"); 
ALIGN 16 ; SetName(0x024A); String("Glen"); 
ALIGN 16 ; SetName(0x0238); String("Selena"); 
ALIGN 16 ; SetName(0x0237); String("Valter"); 
ALIGN 16 ; SetName(0x0246); String("Riev"); 
ALIGN 16 ; SetName(0x0244); String("Caellach"); 
ALIGN 16 ; SetName(0x025B); String("Fado"); 
ALIGN 16 ; SetName(0x0260); String("Ismaire"); 
ALIGN 16 ; SetName(0x025C); String("Hayden"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x02F1); String("Phantom"); 
ALIGN 16 ; SetName(0x026D); String("Summon"); 
ALIGN 16 ; SetName(0x026C); String("Summonern"); 
ALIGN 16 ; SetName(0x02F1); String("Phantom"); 
ALIGN 16 ; SetName(0x02F1); String("Phantom"); 
ALIGN 16 ; SetName(0x0234); String("Lyon"); 
ALIGN 16 ; SetName(0x0235); String("Morva"); 
ALIGN 16 ; SetName(0x0236); String("Orson"); 
ALIGN 16 ; SetName(0x0237); String("Valter"); 
ALIGN 16 ; SetName(0x0238); String("Selena"); 
ALIGN 16 ; SetName(0x0237); String("Valter"); 
ALIGN 16 ; SetName(0x0239); String("Breguet"); 
ALIGN 16 ; SetName(0x023A); String("Bone"); 
ALIGN 16 ; SetName(0x023B); String("Bazba"); 
ALIGN 16 ; SetName(0x0255); String("Monster"); 
ALIGN 16 ; SetName(0x023C); String("Saar"); 
ALIGN 16 ; SetName(0x023D); String("Novala"); 
ALIGN 16 ; SetName(0x023E); String("Murray"); 
ALIGN 16 ; SetName(0x023F); String("Tirado"); 
ALIGN 16 ; SetName(0x0240); String("Binks"); 
ALIGN 16 ; SetName(0x0241); String("Pablo"); 
ALIGN 16 ; SetName(0x0255); String("Monster"); 
ALIGN 16 ; SetName(0x0242); String("Aias"); 
ALIGN 16 ; SetName(0x0243); String("Carlyle"); 
ALIGN 16 ; SetName(0x0244); String("Caellach"); 
ALIGN 16 ; SetName(0x0241); String("Pablo"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0255); String("Monster"); 
ALIGN 16 ; SetName(0x0246); String("Riev"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0247); String("Gheb"); 
ALIGN 16 ; SetName(0x0248); String("Beran"); 
ALIGN 16 ; SetName(0x0255); String("Monster"); 
ALIGN 16 ; SetName(0x0255); String("Monster"); 
ALIGN 16 ; SetName(0x0255); String("Monster"); 
ALIGN 16 ; SetName(0x0255); String("Monster"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0250); String("Hunter"); 
ALIGN 16 ; SetName(0x024F); String("Bandit"); 
ALIGN 16 ; SetName(0x024F); String("Bandit"); 
ALIGN 16 ; SetName(0x024F); String("Bandit"); 
ALIGN 16 ; SetName(0x0249); String("O'Neill"); 
ALIGN 16 ; SetName(0x024A); String("Glen"); 
ALIGN 16 ; SetName(0x024B); String("Zonta"); 
ALIGN 16 ; SetName(0x024C); String("Vigarde"); 
ALIGN 16 ; SetName(0x0234); String("Lyon"); 
ALIGN 16 ; SetName(0x0236); String("Orson"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x024D); String("Soldier"); 
ALIGN 16 ; SetName(0x024D); String("Soldier"); 
ALIGN 16 ; SetName(0x024D); String("Soldier"); 
ALIGN 16 ; SetName(0x024D); String("Soldier"); 
ALIGN 16 ; SetName(0x024D); String("Soldier"); 
ALIGN 16 ; SetName(0x024D); String("Soldier"); 
ALIGN 16 ; SetName(0x024D); String("Soldier"); 
ALIGN 16 ; SetName(0x024D); String("Soldier"); 
ALIGN 16 ; SetName(0x024D); String("Soldier"); 
ALIGN 16 ; SetName(0x024D); String("Soldier"); 
ALIGN 16 ; SetName(0x024D); String("Soldier"); 
ALIGN 16 ; SetName(0x024D); String("Soldier"); 
ALIGN 16 ; SetName(0x024D); String("Soldier"); 
ALIGN 16 ; SetName(0x024D); String("Soldier"); 
ALIGN 16 ; SetName(0x024E); String("Remnant"); 
ALIGN 16 ; SetName(0x0254); String("Cutthroat"); 
ALIGN 16 ; SetName(0x024E); String("Remnant"); 
ALIGN 16 ; SetName(0x024E); String("Remnant"); 
ALIGN 16 ; SetName(0x024E); String("Remnant"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0253); String("Mercenary"); 
ALIGN 16 ; SetName(0x0251); String("Sellsword"); 
ALIGN 16 ; SetName(0x0252); String("Remnant"); 
ALIGN 16 ; SetName(0x0255); String("Monster"); 
ALIGN 16 ; SetName(0x0255); String("Monster"); 
ALIGN 16 ; SetName(0x0255); String("Monster"); 
ALIGN 16 ; SetName(0x0255); String("Monster"); 
ALIGN 16 ; SetName(0x0255); String("Monster"); 
ALIGN 16 ; SetName(0x0255); String("Monster"); 
ALIGN 16 ; SetName(0x0255); String("Monster"); 
ALIGN 16 ; SetName(0x0255); String("Monster"); 
ALIGN 16 ; SetName(0x0255); String("Monster"); 
ALIGN 16 ; SetName(0x0255); String("Monster"); 
ALIGN 16 ; SetName(0x0255); String("Monster"); 
ALIGN 16 ; SetName(0x0255); String("Monster"); 
ALIGN 16 ; SetName(0x0255); String("Monster"); 
ALIGN 16 ; SetName(0x0255); String("Monster"); 
ALIGN 16 ; SetName(0x0255); String("Monster"); 
ALIGN 16 ; SetName(0x0255); String("Monster"); 
ALIGN 16 ; SetName(0x0256); String("Monster"); 
ALIGN 16 ; SetName(0x0255); String("Monster"); 
ALIGN 16 ; SetName(0x0255); String("Monster"); 
ALIGN 16 ; SetName(0x0255); String("Monster"); 
ALIGN 16 ; SetName(0x025A); String("Fomortiis"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0262); String("Frelian"); 
ALIGN 16 ; SetName(0x0262); String("Frelian"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x025B); String("Fado"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x025C); String("Hayden"); 
ALIGN 16 ; SetName(0x025E); String("Mansel"); 
ALIGN 16 ; SetName(0x025D); String("Klimt"); 
ALIGN 16 ; SetName(0x025F); String("Dara"); 
ALIGN 16 ; SetName(0x0260); String("Ismaire"); 
ALIGN 16 ; SetName(0x0261); String("Messenger"); 
ALIGN 16 ; SetName(0x0263); String("Rausten"); 
ALIGN 16 ; SetName(0x0263); String("Rausten"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0266); String("River Folk"); 
ALIGN 16 ; SetName(0x0266); String("River Folk"); 
ALIGN 16 ; SetName(0x0266); String("River Folk"); 
ALIGN 16 ; SetName(0x0266); String("River Folk"); 
ALIGN 16 ; SetName(0x0266); String("River Folk"); 
ALIGN 16 ; SetName(0x0265); String("Renais Cit."); 
ALIGN 16 ; SetName(0x0265); String("Renais Cit."); 
ALIGN 16 ; SetName(0x0265); String("Renais Cit."); 
ALIGN 16 ; SetName(0x0264); String("Citizen"); 
ALIGN 16 ; SetName(0x0267); String("Enemy"); 
ALIGN 16 ; SetName(0x0268); String("Wall"); 
ALIGN 16 ; SetName(0x0269); String("Snag"); 
ORG NameStrings + (16*256) 

//ALIGN 16 ; SetName(0x0253); String("Mercenary"); 
// todo: replace dummy names 


ALIGN 4
DIS_matrixTable:
#incbin "matrixTable.bin"
ALIGN 4 
NeverRandomizeColours:
#ifdef VeslyBuildfile
WORD 0 
#else 
WORD 1
#endif
PortraitColoursPastThisAreNotSkin:
#ifdef VeslyBuildfile
WORD 5 // vanilla portraits use the first few colours for skin  
#else 
WORD 0 
#endif 

ALIGN 4 
SkillSysInstalled:
#ifdef SKILLSYS_INSTALLED
WORD 1 
#endif 
WORD 0 
StrMagInstalled:
#ifdef STRMAG_INSTALLED
WORD 1 
#endif 
WORD 0 

#ifndef SKILLSYS_INSTALLED 
ALIGN 4 
prConGetter: 
prAidGetter: 
prMovGetter: 
Growth_Getter_Table:
Skill_Getter:
Get_Hp_Growth: 
Get_Str_Growth: 
Get_Skl_Growth: 
Get_Spd_Growth: 
Get_Luk_Growth: 
Get_Def_Growth: 
Get_Res_Growth:
prMaxHPGetter:
WORD 0 
#endif 
#ifndef STRMAG_INSTALLED 
MagClassTable:
MagCharTable:
prMagGetter: 
Get_Mag_Growth:
WORD 0 
#endif 
#ifndef IconOrrValue 
#define IconOrrValue 0x100
#endif  

ALIGN 4 
UseAutoGetters:
#ifdef DoNotUseAutoGetters 
WORD 0 
#else 
WORD 1 
#endif 
ALIGN 4
IconOrr:
WORD IconOrrValue
SRR_TotalOptions:
#ifdef VeslyBuildfile 
#ifdef SKILLSYS_INSTALLED 
WORD 18
#else 
WORD 17
#endif  
#else 
WORD 16 
#endif 

// if you don't have a max hp getter, these are used 
PlayerMaxHP:
WORD 60 
EnemyBossMaxHP:
WORD 80
EnemyMaxHP:
WORD 60  
NumberOfSkills:
WORD 0xE3
DisplayRandomSkillsOption:
#ifdef VeslyBuildfile 
	#ifdef SKILLSYS_INSTALLED 
		WORD 1 // This requires editing SkillTester.c 
	#else 
		WORD 0
	#endif  
#else 
	WORD 0 
#endif 

ALIGN 4 
NeverRandomizeBGM:
#ifdef NeverRandomizeMusic
WORD 1
#else 
WORD 0
#endif  

ALIGN 4 
RandValues:
WORD RandomizerRam
RandBitflags:
WORD RandomizerRam+4
MaxItems:
WORD RandomizerRam+8
MaxClasses:
WORD RandomizerRam+9
RecruitValues:
WORD RandomizerRam+10
AlwaysSkill:
WORD RandomizerRam+11
#else 
MESSAGE IMPROVED_SOUND_MIXER is not compatible with the self randomizing rom. Please comment it out in config.event to install. 
#endif 
